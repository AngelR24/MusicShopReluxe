// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicShopReluxe.Data;

namespace MusicShopReluxe.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicShopReluxe.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SongId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<int?>("PlayListId")
                        .HasColumnType("int");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.Property<int?>("TopArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayListId");

                    b.HasIndex("SongId");

                    b.HasIndex("TopArtistId");

                    b.HasIndex("UserId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.PlayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PlayLists");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayListId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.Artist", b =>
                {
                    b.HasOne("MusicShopReluxe.Models.Song", null)
                        .WithMany("Artists")
                        .HasForeignKey("SongId");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.Genre", b =>
                {
                    b.HasOne("MusicShopReluxe.Models.PlayList", null)
                        .WithMany("AssociatedGenres")
                        .HasForeignKey("PlayListId");

                    b.HasOne("MusicShopReluxe.Models.Song", null)
                        .WithMany("Genres")
                        .HasForeignKey("SongId");

                    b.HasOne("MusicShopReluxe.Models.Artist", "TopArtist")
                        .WithMany()
                        .HasForeignKey("TopArtistId");

                    b.HasOne("MusicShopReluxe.Models.User", null)
                        .WithMany("FavoriteGenres")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.PlayList", b =>
                {
                    b.HasOne("MusicShopReluxe.Models.User", null)
                        .WithMany("PlayLists")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MusicShopReluxe.Models.Song", b =>
                {
                    b.HasOne("MusicShopReluxe.Models.PlayList", null)
                        .WithMany("SongsInPlaylist")
                        .HasForeignKey("PlayListId");
                });
#pragma warning restore 612, 618
        }
    }
}
